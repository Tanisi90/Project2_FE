{"version":3,"file":"datepicker-service.d.ts","sources":["datepicker-service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgbCalendar } from './ngb-calendar';\r\nimport { NgbDate } from './ngb-date';\r\nimport { NgbDateStruct } from './ngb-date-struct';\r\nimport { DatepickerViewModel } from './datepicker-view-model';\r\nimport { Observable } from 'rxjs';\r\nimport { NgbDatepickerI18n } from './datepicker-i18n';\r\nexport interface DatepickerServiceInputs extends Partial<Required<Pick<DatepickerViewModel, 'dayTemplateData' | 'displayMonths' | 'disabled' | 'firstDayOfWeek' | 'focusVisible' | 'markDisabled' | 'maxDate' | 'minDate' | 'navigation' | 'outsideDays'>>> {\r\n}\r\nexport declare class NgbDatepickerService {\r\n    private _calendar;\r\n    private _i18n;\r\n    private _VALIDATORS;\r\n    private _model$;\r\n    private _dateSelect$;\r\n    private _state;\r\n    get model$(): Observable<DatepickerViewModel>;\r\n    get dateSelect$(): Observable<NgbDate>;\r\n    set(options: DatepickerServiceInputs): void;\r\n    constructor(_calendar: NgbCalendar, _i18n: NgbDatepickerI18n);\r\n    focus(date?: NgbDate | null): void;\r\n    focusSelect(): void;\r\n    open(date?: NgbDate | null): void;\r\n    select(date?: NgbDate | null, options?: {\r\n        emitEvent?: boolean;\r\n    }): void;\r\n    toValidDate(date?: NgbDateStruct | null, defaultValue?: NgbDate | null): NgbDate | null;\r\n    getMonth(struct: NgbDateStruct): import(\"./datepicker-view-model\").MonthViewModel;\r\n    private _nextState;\r\n    private _patchContexts;\r\n    private _updateState;\r\n}\r\n"]}